version: '2.1'
services:
    mongo:
        #        image: mongo
        build:
            context: .
            dockerfile: ./docker/mhs_mongo/Dockerfile
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: password
            MONGO_INITDB_DATABASE: mhs
            MONGO_NON_ROOT_USERNAME: mhs
            MONGO_NON_ROOT_PASSWORD: mhs
        ports:
            - "27017:27017"
        volumes:
            - "$MHS_DATALINK/mongo/mhs/data:/data/db"
            - "$MHS_DATALINK/mongo/mhs/dump:/data/dump"
            - ./docker/mhs_mongo/scripts/mongo-initdb.sh:/docker-entrypoint-initdb.d/mongo-user.sh:ro
#        networks:
#            - mongo-network
        #        command: bash -c "mongod --repair && mongod"
        expose:
            - 27017
    redis:
        image: 'redis:5.0.5'
        # command: redis-server --requirepass redispass
#        networks:
#            - airflow-network
        ports:
            - "6379:6379"
    postgres:
        image: postgres:9.6
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        volumes:
            - "$MHS_DATALINK/airflow:/var/lib/postgresql/data"
#        networks:
#            - airflow-network
    flower:
        build:
            context: .
            dockerfile: ./docker/mhs_python/Dockerfile
        image: mhs_python
        restart: always
        depends_on:
            - redis
        environment:
            - EXECUTOR=Celery
            # - REDIS_PASSWORD=redispass
        ports:
            - "5555:5555"
        command: flower
#        networks:
#            - airflow-network

    webserver:
        build:
            context: .
            dockerfile: ./docker/mhs_python/Dockerfile
        image: mhs_python
        #        image: puckel/docker-airflow:1.10.4
        restart: always
        depends_on:
            - mongo
            - postgres
            - redis
            - rabbitmq
        environment:
            - MONGO_HOST=mongo
            - MONGO_PORT=27017
            - LOAD_EX=n
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        volumes:
            - ./mhs/dags:/usr/local/airflow/dags
            - ./mhs:/usr/local/airflow/mhs
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        ports:
            - "8080:8080"
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3
#        networks:
#            - mongo-network
#            - airflow-network
    scheduler:
        build:
            context: .
            dockerfile: ./docker/mhs_python/Dockerfile
        image: mhs_python
        restart: always
        depends_on:
            - webserver
        volumes:
            - ./mhs/dags:/usr/local/airflow/dags
            - ./mhs:/usr/local/airflow/mhs
            - "$MHS_DATALINK:/Volumes/MHS"
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        environment:
            - MONGO_HOST=mongo
            - MONGO_PORT=27017
            - LOAD_EX=n
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        command: scheduler
#        networks:
#            - mongo-network
#            - airflow-network

    graph_tool:
#        build:
#          context: .
#          dockerfile: ./docker/mhs_graphtool/Dockerfile
        image: tiagopeixoto/graph-tool
        mem_limit: 6000m
        depends_on:
          - rabbitmq
        environment:
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
        volumes:
#            - $MHS_DATALINK:/root
            - ./mhs/dags:/usr/local/airflow/dags
            - ./mhs:/usr/local/airflow/mhs
            - "$MHS_DATALINK:/Volumes/MHS"
            - "./mhs/scripts/graph-tool/:/tmp/graph-tool"
        command: '/tmp/graph-tool/script.sh'
        #command: 'python'
        stdin_open: true
    rabbitmq:
        image: 'bitnami/rabbitmq:3.7'
        ports:
            - '4369:4369'
            - '5672:5672'
            - '25672:25672'
            - '15672:15672'
        expose:
          - 5672

    worker:
        build:
            context: .
            dockerfile: ./docker/mhs_python/Dockerfile
        image: mhs_python
        restart: always
        depends_on:
            - scheduler
            - rabbitmq
        volumes:
            - ./mhs/dags:/usr/local/airflow/dags
            - ./mhs:/usr/local/airflow/mhs
            - "$MHS_DATALINK:/Volumes/MHS"
            # Uncomment to include custom plugins
            # - ./plugins:/usr/local/airflow/plugins
        environment:
            - MONGO_HOST=mongo
            - MONGO_PORT=27017
            - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
            - EXECUTOR=Celery
            # - POSTGRES_USER=airflow
            # - POSTGRES_PASSWORD=airflow
            # - POSTGRES_DB=airflow
            # - REDIS_PASSWORD=redispass
        command: worker
#        networks:
#            - airflow-network



networks:
    mongo-network:
        driver: bridge

    airflow-network:
        driver: bridge
